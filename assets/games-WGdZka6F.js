import{z as i,h as p,N as n}from"./index-Zp6uYDem.js";const o=async()=>(await i.post({url:`${p().platUrl}/comm/app`,data:{}})).data,c=async()=>(await i.post({url:`${p().platUrl}/comm/cp`,data:{}})).data,f=async t=>(await i.post({url:`${p().platUrl}/comm/cp/games`,data:{cp_id:t}})).data,d=n("games",{state:()=>({apps:[],appInited:!1,appMap:{},popularGames:[],gameMap:{},providers:[],isLoading:!1,providersInited:!1,cpGamesCache:{}}),actions:{async fetchApps(){if(!this.appInited){this.isLoading=!0;try{const t=await o();this.apps=JSON.parse(JSON.stringify(t));let e={},s={};for(let a of this.apps){e[a.info.app_id]===void 0&&(e[a.info.app_id]=a.info);for(let r of a.games)s[r.game_id]===void 0&&(s[r.game_id]=r)}this.appMap=e,this.gameMap=s,this.apps.length>0&&(this.appInited=!0)}catch(t){console.error("Error fetching categories:",t)}finally{this.isLoading=!1}}},async fetchProviders(){if(!this.providersInited){this.isLoading=!0;try{const t=await c();this.providers=t,this.providers.length>0&&(this.providersInited=!0)}catch(t){console.error("Error fetching providers:",t)}finally{this.isLoading=!1}}},getCpInfo(t){return this.providers.find(e=>e.name===t)||null},getAppInfo(t){const e=parseInt(t);return this.appMap[e]||null},getAppGames(t){const e=parseInt(t),s=this.apps.find(a=>a.info.app_id===e);return s?s.games:[]},async getCpGames(t){if(this.cpGamesCache[t])return this.cpGamesCache[t];try{const e=this.getCpInfo(t);if(!e)throw new Error(`CP not found: ${t}`);const s=await f(e.cp_id);return this.cpGamesCache[t]=s,s}catch(e){return console.error("Error fetching CP games:",e),[]}}}});export{d as u};
